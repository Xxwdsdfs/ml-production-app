name: CI/CD Workflow

on:
  push:
    branches:
      - dev
      - staging
      - main

permissions:
  contents: write

jobs:
  pull_request:
    name: Build and Test on Pull Request to Dev
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.9'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          pip install pytest

      - name: Start backend server
        run: |
          echo "Starting backend server..."
          python app/backend/main.py &
        working-directory: app/backend

      - name: Wait for backend to be ready
        run: |
          echo "Waiting for backend to be ready..."
          until curl -s http://127.0.0.1:5000; do
            sleep 1
          done

      - name: Run unit test for predict
        run: |
          echo "Running test_predict.py..."
          pytest tests/unit/test_predict.py

  push_to_staging:
    needs: [pull_request]
    name: Push to Staging Branch
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Push to staging branch
        run: |
          git config --global user.email "axelbenoist@orange.fr"
          git config --global user.name "Axel Benoist"
          git fetch origin +refs/heads/*:refs/remotes/origin/*
          if git rev-parse --verify origin/staging; then
            git checkout staging
            git pull origin staging
          else
            git checkout -b staging
          fi
          git merge dev --allow-unrelated-histories
          git push origin staging

  staging_tests:
    needs: [push_to_staging]
    name: Build and Test on Staging
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.9'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: Start backend server
        run: |
          echo "Starting backend server..."
          python app/backend/main.py &
        working-directory: app/backend

      - name: Wait for backend to be ready
        run: |
          echo "Waiting for backend to be ready..."
          until curl -s http://127.0.0.1:5000; do
            sleep 1
          done

      - name: Run unit test for predict
        run: |
          echo "Running test_predict.py..."
          pytest tests/unit/test_predict.py

      - name: Push to production branch
        run: |
          git config --global user.email "mouhamadou.gueye@efrei.net"
          git config --global user.name "acbbiste17"
          git checkout main
          git merge staging
          git push origin main

  production_deploy:
    needs: [staging_tests]
    name: Deploy to Production
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Build Docker images
        run: |
          docker build -t your-dockerhub-username/ml-production-app .

      - name: Push Docker images to DockerHub
        run: |
          echo "${{ secrets.DOCKER_PASSWORD }}" | docker login -u "${{ secrets.DOCKER_USERNAME }}" --password-stdin
          docker push your-dockerhub-username/ml-production-app

      - name: Deploy to Production
        run: |
          echo "Deploying to production..."
          # Ajoutez les étapes de déploiement ici
